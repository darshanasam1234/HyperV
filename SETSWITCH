# Rename Physical NICs
$adapters = Get-NetAdapter | Where-Object { $_.Status -eq "Up" } | Sort-Object Name | Select-Object -First 2
Rename-NetAdapter -Name $adapters[0].Name -NewName "NIC_01"
Rename-NetAdapter -Name $adapters[1].Name -NewName "NIC_02"

# Create SET Switch
$setSwitchName = "SETSwitch"
New-VMSwitch -Name $setSwitchName -NetAdapterName "NIC_01","NIC_02" -EnableEmbeddedTeaming $true -AllowManagementOS $false

# Define Virtual NICs and VLANs
$vmNics = @(
    @{ Name = "Management"; VLAN = 600 },
    @{ Name = "SMB1"; VLAN = 601 },
    @{ Name = "SMB2"; VLAN = 602 },
    @{ Name = "HB"; VLAN = 603 },
    @{ Name = "LM"; VLAN = 604 }
)

# Create Virtual NICs
foreach ($nic in $vmNics) {
    Add-VMNetworkAdapter -ManagementOS -Name $nic.Name -SwitchName $setSwitchName
    Set-VMNetworkAdapterVlan -ManagementOS -VMNetworkAdapterName $nic.Name -Access -VlanId $nic.VLAN
}

# Prompt for IP addresses
foreach ($nic in $vmNics) {
    $ip = Read-Host "Enter IP address for $($nic.Name)"
    $prefix = Read-Host "Enter subnet prefix length for $($nic.Name) (e.g., 24 for 255.255.255.0)"

    $gateway = $null
    if ($nic.Name -eq "Management") {
        $gateway = Read-Host "Enter default gateway for $($nic.Name)"
        New-NetIPAddress -InterfaceAlias $nic.Name -IPAddress $ip -PrefixLength $prefix -DefaultGateway $gateway
    } else {
        New-NetIPAddress -InterfaceAlias $nic.Name -IPAddress $ip -PrefixLength $prefix
    }
}
